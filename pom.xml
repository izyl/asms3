<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.bureauveritas.web</groupId>
	<artifactId>asms3</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>asms3</name>

	<!-- First : install sencha cmd and launch with a variable : cmd.dir = SENCHA_HOME -->
	<properties>
		<!-- l'emplacement de l'application sencha extjs -->
		<webapp>src\main\webapp</webapp>
		<sencha.webapp.output.dir>${project.build.directory}\sencha-webapp</sencha.webapp.output.dir>
		<!-- one of production|testing|native|package (http://docs-origin.sencha.com/cmd/5.x/advanced_cmd/cmd_reference.html#sencha_app_build) -->
		<sencha.env>testing</sencha.env>
		<sencha.base.theme>ext-theme-crisp</sencha.base.theme>
		<sencha.asms3.theme>asms3-theme</sencha.asms3.theme>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.5.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.2.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.4.Final</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.175</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.2.3</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.0.3.Final</version>
		</dependency>
	</dependencies>

	<profiles>

		<profile>
			<!-- after checkout, run this to generate sencha ext js application files -->
			<id>sencha-dev-install</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<!-- full ext app build -->
								<id>sencha-generate-app</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="com/sencha/ant/antlib.xml"
											classpath="${cmd.dir}/sencha.jar" loaderref="senchaloader" />
										<x-sencha-init />
										<x-sencha-command dir="${webapp}">
											generate
											app
											-ext
											-n=${project.name}
											-p=${webapp}
											-th=${sencha.base.theme}
										</x-sencha-command>
									</target>
								</configuration>
							</execution>
							<execution>
								<!-- full ext app build -->
								<id>sencha-generate-theme</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="com/sencha/ant/antlib.xml"
											classpath="${cmd.dir}/sencha.jar" loaderref="senchaloader" />
										<x-sencha-command dir="${webapp}">
											generate
											theme
											-n=${sencha.asms3.theme}
											-e=${sencha.base.theme}
										</x-sencha-command>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>refresh-theme</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<!-- full ext app build -->
								<id>compile-sass</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="com/sencha/ant/antlib.xml"
											classpath="${cmd.dir}/sencha.jar" loaderref="senchaloader" />
										<x-sencha-command dir="${webapp}/packages/${sencha.asms3.theme}">
											package
											build
											-c 
										</x-sencha-command>
									</target>
								</configuration>
							</execution>
							<execution>
								<!-- app refresh after sass compile -->
								<id>sencha-app-refresh</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="com/sencha/ant/antlib.xml"
											classpath="${cmd.dir}/sencha.jar" loaderref="senchaloader" />
										<x-sencha-command dir="${webapp}">
											app
											refresh
										</x-sencha-command>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sencha-webapp-war</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<!-- full ext app build -->
								<id>sencha-app-build</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="com/sencha/ant/antlib.xml"
											classpath="${cmd.dir}/sencha.jar" loaderref="senchaloader" />
										<x-sencha-command dir="${webapp}">
											app
											build
											-c <!-- clean output dir : ${webapp}/build -->
											-e=${sencha.env} <!-- sencha build env -->
											-d=${sencha.webapp.output.dir} <!-- we will output the build in 
												the target dir and include it back in the war -->
										</x-sencha-command>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- the trick : we only want the final build files of ext + WEB-INF -->
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<packagingExcludes>**/*.md,.sencha/,app/,build/,ext/,overrides/,packages/,sass/,bootstrap.css,bootstrap.js,bootstrap.json,build.xml,Readme.md</packagingExcludes>
							<webResources>
								<resource>
									<directory>${sencha.webapp.output.dir}</directory>
									<targetPath>/</targetPath>
									<includes>
										<include>resources/</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<build>
		<!-- we dont want sencha build files in our war but we still want them 
			to be under webapp for our project to be usable with wtp -->
		<finalName>${project.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<!-- full ext app build -->
						<id>sencha-app-build</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<taskdef resource="com/sencha/ant/antlib.xml" classpath="${cmd.dir}/sencha.jar"
									loaderref="senchaloader" />
								<x-sencha-init />
								<x-sencha-command dir="${webapp}">
									app
									build
									-c <!-- clean output dir : ${webapp}/build -->
									-e=${sencha.env} <!-- sencha build env -->
								</x-sencha-command>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>